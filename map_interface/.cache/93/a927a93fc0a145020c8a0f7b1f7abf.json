{"id":"node_modules/pixelworks/lib/processor.js","dependencies":[{"name":"/Users/husnasayedi/Documents/UCR/MastersProject/FinalProject/map_interface/package.json","includedInParent":true,"mtime":1574016602502},{"name":"/Users/husnasayedi/Documents/UCR/MastersProject/FinalProject/map_interface/node_modules/pixelworks/package.json","includedInParent":true,"mtime":1559079738210},{"name":"./util","loc":{"line":1,"column":27},"parent":"/Users/husnasayedi/Documents/UCR/MastersProject/FinalProject/map_interface/node_modules/pixelworks/lib/processor.js","resolved":"/Users/husnasayedi/Documents/UCR/MastersProject/FinalProject/map_interface/node_modules/pixelworks/lib/util.js"}],"generated":{"js":"var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pixelworks/lib/processor.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}}],"sources":{"node_modules/pixelworks/lib/processor.js":"var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n"},"lineCount":275}},"error":null,"hash":"e5e3e36e9f273bfa6bf1a0a1f43213c2","cacheData":{"env":{}}}